plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version '3.3'
	id 'com.google.cloud.tools.jib' version '3.2.0'
}

jib {
	from {
		image = image = 'eclipse-temurin:17'
	}
	to {
		tags = [System.getProperty("image.tag")]
	}
	container {
		creationTime = "USE_CURRENT_TIMESTAMP"
		environment = [USE_PROFILE: System.getProperty("use.profile")]
		jvmFlags = ['-Dspring.profiles.active='+ System.getProperty("use.profile")]
		mainClass = 'kr.wadiz.platform.api.nicepay.NicepayApiApplication'
		format = 'OCI'
	}
}

group = 'kr.wadiz.platform.api.nicepay'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// MySql
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'dev.miku:r2dbc-mysql:0.8.2.RELEASE'

	// RabbitMQ
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'

	// Validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.0.1'
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.3.Final'

//	implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
